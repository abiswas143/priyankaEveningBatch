<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="44740" started-at="2019-05-02T14:48:10Z" finished-at="2019-05-02T14:48:55Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="44740" started-at="2019-05-02T14:48:10Z" finished-at="2019-05-02T14:48:55Z">
      <class name="scripts.TestValidLogin">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:scripts.TestValidLogin@4d41cee]" name="openApplication" is-config="true" duration-ms="13966" started-at="2019-05-02T14:48:10Z" finished-at="2019-05-02T14:48:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="FAIL" signature="validLogin()[pri:0, instance:scripts.TestValidLogin@4d41cee]" name="validLogin" duration-ms="6729" started-at="2019-05-02T14:48:24Z" finished-at="2019-05-02T14:48:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at scripts.TestValidLogin.validLogin(TestValidLogin.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:scripts.TestValidLogin@4d41cee]" name="closeApplication" is-config="true" duration-ms="353" started-at="2019-05-02T14:48:31Z" finished-at="2019-05-02T14:48:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=FAILURE method=TestValidLogin.validLogin()[pri:0, instance:scripts.TestValidLogin@4d41cee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- scripts.TestValidLogin -->
      <class name="scripts.TestInvalidLogin">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:scripts.TestInvalidLogin@3712b94]" name="openApplication" is-config="true" duration-ms="5855" started-at="2019-05-02T14:48:31Z" finished-at="2019-05-02T14:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="validLogin()[pri:0, instance:scripts.TestInvalidLogin@3712b94]" name="validLogin" duration-ms="17651" started-at="2019-05-02T14:48:37Z" finished-at="2019-05-02T14:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:scripts.TestInvalidLogin@3712b94]" name="closeApplication" is-config="true" duration-ms="120" started-at="2019-05-02T14:48:55Z" finished-at="2019-05-02T14:48:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=TestInvalidLogin.validLogin()[pri:0, instance:scripts.TestInvalidLogin@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- scripts.TestInvalidLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
